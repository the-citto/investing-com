[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "investing_com"
description = "project description"
# requires-python = ">=3.12"
version = "0.1.1"

authors = [
    {name = "the-citto"}
]
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: MIT",
    "Operating System :: Linux"
]

dynamic = ["dependencies"]

[project.optional-dependencies]
tests = [
    "complexipy",
    "coverage",
    "pytest",
    "pytest-cov",
    "pytest-mypy",
    "pytest-pyright",
    "pytest-ruff",
]
dev = [
    "investing_com[tests]",
    "ipython",
]

[project.scripts]
investing_com = "investing_com:__main__.main"

[project.gui-scripts]


[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

# [tool.setuptools]
# package-dir = {"" = "python"}

[tool.setuptools.package-data]
investing_com = ["py.typed"]

# [tool.setuptools.dynamic]
# dependencies = { file = ["requirements/requirements.txt"] }
# optional-dependencies.tests = { file = ["requirements/requirements-tests.txt"]}
# optional-dependencies.dev = { file = ["requirements/requirements-dev.txt"]}

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
addopts = "--strict-markers --no-header --tb=no --cov --cov-report term-missing"
testpaths = ["tests"]

[tool.coverage.run]
omit = ["tests/*"]

[tool.mypy]
strict = true
# python_executable = ".venv/bin/python"
# exclude = [
#     "__pycache__",
#     ".git",
#     ".venv",
#     "_old",
#     "_tmp",
# ]

# [[tool.mypy.overrides]]
# module = "tests.*"
# ignore_missing_imports = true
# ignore_errors = true


[tool.pyright]
typeCheckingMode = "strict"
venvPath = "."
venv = ".venv"

# include = [
#     "python",
#     "tests",
# ]
# exclude = [
#     "__pycache__",
#     ".git",
#     ".venv",
#     "_old",
#     "_tmp",
# ]

[tool.ruff]
line-length = 120
# exclude = [
#     "__pycache__",
#     ".git",
#     ".venv",
#     "_old",
#     "_tmp",
# ]
# indent-width = 4

[tool.ruff.lint]
select = [
    "ALL"
]
ignore = [
    # "D211", # `no-blank-line-before-class`
    "D203", # `one-blank-line-before-class`
    "D212", # `multi-line-summary-first-line`
    # "D213", # `multi-line-summary-second-line
    "ERA001", # Found commented-out code
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed
    "D102", # Missing docstring in public method
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "PLR2004", # Magic value used in comparison
    "S101",  # Use of `assert` detected
]

[tool.ruff.lint.isort]
# known-first-party = ["investing_com"]
# lines-after-imports = 3


